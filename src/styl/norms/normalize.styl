// _normalize.scss v-0.3 //
// combination of normalize and sanitize.

/* ========== Document ========== */
*,
::before, 
::after {
  box-sizing: border-box;
  margin: 0;
}

::before, 
::after {
  text-decoration: inherit; 
  vertical-align: inherit; 
}

html {
  cursor: default; 
  line-height: 1.5; 
  -moz-tab-size: 2; 
  tab-size: 2; 
  -webkit-tap-highlight-color: transparent ;
  -ms-text-size-adjust: 100%; 
  -webkit-text-size-adjust: 100%; 
  text-size-adjust: 100%;
  word-break: break-word; 
  overflow-wrap: break-word
}

/* ========== Grouping content ========== */

hr {
  height: 0; 
	overflow: hidden;
}

main { display: block; }

ol ol, ol ul, 
ul ol, ul ul,
dl dl, dl ol, 
dl ul, ol dl,
ul dl { margin: 0; }

nav ol, 
nav ul {
  list-style: none;
  padding: 0;
}

/* ========== Text-level semantics ========== */

a { background-color: transparent; }

abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  text-decoration: underline dotted;
}

b,
strong {
  font-weight: bolder;
}

pre, code,
kbd, samp {
  font-family: monospace, monospace; 
  font-size: 1em; 
}

sub,
sup {
  font-size: var(--h8);
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub { bottom: -0.25em; }

sup { top: -0.5em; }

small { font-size: 80%; }

small, caption {
  vertical-align: baseline;
  line-height: 1;
}

caption { color: muted-5; }

/* ========== Embedded content ========== */

audio, canvas,
iframe, img,
svg, video { vertical-align: middle; }

audio, video { display: inline-block; }

audio:not([controls]) {
  display: none;
  height: 0;
}

iframe, img { border-style: none; }

svg:not([fill]) { fill: currentColor; }

svg:not(:root) { overflow: hidden; }

/* ========== Forms ========== */

 button,
 input,
 optgroup,
 select,
 textarea {
   font-family: inherit; 
   font-size: var(--h7);
   line-height: inherit; 
   letter-spacing: inherit; 
 }

button, input {
  overflow: hidden;  
  text-transform: none; 
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

// fieldset {
//   border: 1px solid #a0a0a0; 
//   padding: 0.35em 0.75em 0.625em; 
// }

// legend {
//   color: inherit; 
//   display: table; 
//   max-width: 100%; 
//   white-space: normal; 
//   padding: 0;
// }

// progress {
//   display: inline-block; 
//   vertical-align: baseline; 
// }

select { text-transform: none; }

textarea {
  margin: 0; 
  overflow: auto; 
  resize: vertical; 
}

[type="checkbox"],
[type="radio"] { padding: 0; }

[type="search"] {
  -webkit-appearance: textfield; 
  outline-offset: -2px; 
}

::-webkit-inner-spin-button,
::-webkit-outer-spin-button { height: auto; }

::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

::-webkit-search-decoration { -webkit-appearance: none; }

::-webkit-file-upload-button {
  -webkit-appearance: button; 
  font: inherit; 
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

:-moz-focusring { outline: 1px dotted fontColor; }

:-moz-ui-invalid { box-shadow: none; }

/* ========== Interactive ========== */

// details { display: block; }

// dialog {
//   background-color: white;
//   border: solid;
//   color: black;
//   display: block;
//   height: -moz-fit-content;
//   height: -webkit-fit-content;
//   height: fit-content;
//   left: 0;
//   margin: auto;
//   padding: 1em;
//   position: absolute;
//   right: 0;
//   width: -moz-fit-content;
//   width: -webkit-fit-content;
//   width: fit-content;
// }

// dialog:not([open]) { display: none; }

// summary { display: list-item; }

/* ========== Scripting ========== */

// canvas { display: inline-block; }

template { display: none; }

/* ========== User interaction ========== */

a, area, button,
input, label,
select, summary,
textarea, [tabindex] {
  -ms-touch-action: manipulation; 
  touch-action: manipulation; 
}

[hidden] { display: none; }

/* ========== Accessibility ========== */

[aria-busy="true"] { cursor: progress; }

[aria-controls] { cursor: pointer; }

[aria-disabled="true"],
[disabled] { cursor: not-allowed; }

[aria-hidden="false"][hidden] { display: initial; }

[aria-hidden="false"][hidden]:not(:focus) {
  clip: rect(0, 0, 0, 0);
  position: absolute;
}

